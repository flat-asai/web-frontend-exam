(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getWeatherInfo=void 0;const getWeatherInfo=weatherCode=>{if(weatherCode===0){return{label:"快晴",icon:"./static/img/100.svg"}}if(weatherCode===1){return{label:"晴れ",icon:"./static/img/100.svg"}}if(weatherCode===2){return{label:"一部曇",icon:"./static/img/101.svg"}}if(weatherCode===3){return{label:"曇り",icon:"./static/img/200.svg"}}if(weatherCode<=49){return{label:"霧",icon:"./static/img/200.svg"}}if(weatherCode<=59){return{label:"霧雨",icon:"./static/img/202.svg"}}if(weatherCode<=69){return{label:"雨",icon:"./static/img/300.svg"}}if(weatherCode<=79){return{label:"雪",icon:"./static/img/400.svg"}}if(weatherCode<=84){return{label:"俄か雨",icon:"./static/img/302.svg"}}if(weatherCode<=94){return{label:"雪・雹",icon:"./static/img/400.svg"}}if(weatherCode<=99){return{label:"雷雨",icon:"./static/img/300.svg"}}return{label:"ERROR",icon:""}};exports.getWeatherInfo=getWeatherInfo},{}],2:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.updateWeatherCard=exports.formatTempDiff=exports.formatDate=exports.fetchWeatherData=exports.createWeeklyWeatherCard=void 0;var _getWeatherInfo=require("./getWeatherInfo");const fetchWeatherData=async(forecastDays=3,pastDays=1)=>{try{const res=await fetch(`https://api.open-meteo.com/v1/forecast?latitude=35.6785&longitude=139.6823&daily=weathercode,temperature_2m_max,temperature_2m_min,precipitation_probability_max&timezone=Asia%2FTokyo&forecast_days=${forecastDays}&past_days=${pastDays}`);const data=await res.json();return data}catch(error){console.error("天気データの取得中エラー",error);throw error}};exports.fetchWeatherData=fetchWeatherData;const formatDate=dateString=>{const date=new Date(dateString);const month=date.getMonth()+1;const day=date.getDate();const weekdays=["日","月","火","水","木","金","土"];const weekday=weekdays[date.getDay()];return{month:month,day:day,weekday:weekday,formatted:`${month}月${day}日(${weekday})`}};exports.formatDate=formatDate;const formatTempDiff=tempDiff=>{const sign=tempDiff>0?"+":"";const label=tempDiff<0?"マイナス":tempDiff>0?"プラス":"";return{text:`${sign}${tempDiff}`,ariaLabel:`前日比${label}${Math.abs(tempDiff)}度`}};exports.formatTempDiff=formatTempDiff;const updateWeatherCard=(weatherData,cardElement)=>{const{weatherCode:weatherCode,maxTemp:maxTemp,minTemp:minTemp,precipProbability:precipProbability,maxTempDiff:maxTempDiff,minTempDiff:minTempDiff}=weatherData.data;const{label:weatherLabel,icon:weatherIcon}=(0,_getWeatherInfo.getWeatherInfo)(weatherCode);const weatherTelopElement=cardElement.querySelector(".js-weather-telop");if(!weatherTelopElement)return;weatherTelopElement.textContent=weatherLabel;const weatherIconElement=cardElement.querySelector(".js-weather-icon img");if(!weatherIconElement)return;weatherIconElement.src=weatherIcon;weatherIconElement.width="50";weatherIconElement.height="34";const highTempValueElements=cardElement.querySelectorAll(".js-weather-temp-high-value");highTempValueElements.forEach(element=>{element.textContent=maxTemp.toFixed(1)});const{text:highDiffText,ariaLabel:highDiffLabel}=formatTempDiff(maxTempDiff);const highTempDiffElements=cardElement.querySelectorAll(".js-weather-temp-high-diff");highTempDiffElements.forEach(element=>{element.textContent=highDiffText});const highTempDiffWrapper=cardElement.querySelector(".js-weather-temp-high-diff-label");if(!highTempDiffWrapper)return;highTempDiffWrapper.setAttribute("aria-label",highDiffLabel);const lowTempValueElements=cardElement.querySelectorAll(".js-weather-temp-low-value");lowTempValueElements.forEach(element=>{element.textContent=minTemp.toFixed(1)});const{text:lowDiffText,ariaLabel:lowDiffLabel}=formatTempDiff(minTempDiff);const lowTempDiffElements=cardElement.querySelectorAll(".js-weather-temp-low-diff");lowTempDiffElements.forEach(element=>{element.textContent=lowDiffText});const lowTempDiffWrapper=cardElement.querySelector(".js-weather-temp-low-diff-label");if(!lowTempDiffWrapper)return;lowTempDiffWrapper.setAttribute("aria-label",lowDiffLabel);if(precipProbability!==undefined){const timePeriods=[0,6,12,18];timePeriods.forEach(hour=>{const precipElement=cardElement.querySelector(`.js-weather-precipitation-${hour}`);if(precipElement){precipElement.textContent=`${precipProbability}%`;precipElement.setAttribute("aria-label",`降水確率 ${precipProbability}パーセント`)}})}};exports.updateWeatherCard=updateWeatherCard;const createWeeklyWeatherCard=(weatherData,template)=>{const newCard=document.importNode(template.content,true);const{formatted:formattedDate}=formatDate(weatherData.date);const titleElement=newCard.querySelector(".js-weather-title");if(!titleElement)return;titleElement.textContent=formattedDate;const{label:weatherLabel,icon:weatherIcon}=(0,_getWeatherInfo.getWeatherInfo)(weatherData.weatherCode);const weatherElement=newCard.querySelector(".js-weather-telop");if(!weatherElement)return;weatherElement.textContent=weatherLabel;const iconElement=newCard.querySelector(".js-weather-icon img");if(!iconElement)return;iconElement.src=weatherIcon;const highTempElement=newCard.querySelector(".js-weather-temp-high-value");if(!highTempElement)return;highTempElement.textContent=weatherData.maxTemp.toFixed(1);const{text:highDiffText,ariaLabel:highDiffLabel}=formatTempDiff(weatherData.maxTempDiff);const highTempDiffElement=newCard.querySelector(".js-weather-temp-high-diff");if(!highTempDiffElement)return;highTempDiffElement.textContent=highDiffText;const highTempDiffWrapper=newCard.querySelector(".js-weather-temp-high-diff-label");if(!highTempDiffWrapper)return;highTempDiffWrapper.setAttribute("aria-label",highDiffLabel);const lowTempElement=newCard.querySelector(".js-weather-temp-low-value");if(!lowTempElement)return;lowTempElement.textContent=weatherData.minTemp.toFixed(1);const{text:lowDiffText,ariaLabel:lowDiffLabel}=formatTempDiff(weatherData.minTempDiff);const lowTempDiffElement=newCard.querySelector(".js-weather-temp-low-diff");if(!lowTempDiffElement)return;lowTempDiffElement.textContent=lowDiffText;const lowTempDiffWrapper=newCard.querySelector(".js-weather-temp-low-diff-label");if(!lowTempDiffWrapper)return;lowTempDiffWrapper.setAttribute("aria-label",lowDiffLabel);return newCard};exports.createWeeklyWeatherCard=createWeeklyWeatherCard},{"./getWeatherInfo":1}],3:[function(require,module,exports){"use strict";var _switchViewport=require("./switchViewport");var _todayAndTomorrowWeather=require("./todayAndTomorrowWeather");var _weeklyWeather=require("./weeklyWeather");(0,_switchViewport.switchViewport)();(0,_todayAndTomorrowWeather.todayAndTomorrowWeather)();(0,_weeklyWeather.weeklyWeather)()},{"./switchViewport":4,"./todayAndTomorrowWeather":5,"./weeklyWeather":6}],4:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.switchViewport=void 0;const switchViewportContent=()=>{const DEVICE_WIDTH=375;const metaViewportContent=window.outerWidth<DEVICE_WIDTH?`width=${DEVICE_WIDTH}`:"width=device-width, initial-scale=1";const metaViewport=document.querySelector('meta[name="viewport"]');if(metaViewport){metaViewport.setAttribute("content",metaViewportContent)}};const switchViewport=()=>{window.addEventListener("resize",()=>{switchViewportContent()});switchViewportContent()};exports.switchViewport=switchViewport},{}],5:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.todayAndTomorrowWeather=void 0;var _weatherUtils=require("./hooks/weatherUtils");const fetchTodayAndTomorrowWeather=async()=>{const weatherData=await(0,_weatherUtils.fetchWeatherData)(3,1);const yesterdayIndex=0;const todayIndex=1;const tomorrowIndex=2;const weatherInfo=[{label:"今日の天気",data:{date:weatherData.daily.time[todayIndex],weatherCode:weatherData.daily.weathercode[todayIndex],maxTemp:weatherData.daily.temperature_2m_max[todayIndex],minTemp:weatherData.daily.temperature_2m_min[todayIndex],precipProbability:weatherData.daily.precipitation_probability_max[todayIndex],maxTempDiff:Math.round(weatherData.daily.temperature_2m_max[todayIndex]-weatherData.daily.temperature_2m_max[yesterdayIndex]),minTempDiff:Math.round(weatherData.daily.temperature_2m_min[todayIndex]-weatherData.daily.temperature_2m_min[yesterdayIndex])},selector:'[data-period="today"]'},{label:"明日の天気",data:{date:weatherData.daily.time[tomorrowIndex],weatherCode:weatherData.daily.weathercode[tomorrowIndex],maxTemp:weatherData.daily.temperature_2m_max[tomorrowIndex],minTemp:weatherData.daily.temperature_2m_min[tomorrowIndex],precipProbability:weatherData.daily.precipitation_probability_max[tomorrowIndex],maxTempDiff:Math.round(weatherData.daily.temperature_2m_max[tomorrowIndex]-weatherData.daily.temperature_2m_max[todayIndex]),minTempDiff:Math.round(weatherData.daily.temperature_2m_min[tomorrowIndex]-weatherData.daily.temperature_2m_min[todayIndex])},selector:'[data-period="tomorrow"]'}];const todayWeatherCard=document.querySelector(".js-weather-card[data-period='today']");if(!todayWeatherCard)return;const tomorrowWeatherCard=document.querySelector(".js-weather-card[data-period='tomorrow']");if(!tomorrowWeatherCard)return;const todayWeather=weatherInfo[0];const tomorrowWeather=weatherInfo[1];(0,_weatherUtils.updateWeatherCard)(todayWeather,todayWeatherCard);(0,_weatherUtils.updateWeatherCard)(tomorrowWeather,tomorrowWeatherCard)};const todayAndTomorrowWeather=()=>{fetchTodayAndTomorrowWeather()};exports.todayAndTomorrowWeather=todayAndTomorrowWeather},{"./hooks/weatherUtils":2}],6:[function(require,module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.weeklyWeather=void 0;var _weatherUtils=require("./hooks/weatherUtils");const fetchWeeklyWeather=async()=>{const weatherData=await(0,_weatherUtils.fetchWeatherData)(7,0);const weeklyWeatherData=[];for(let i=2;i<7;i++){const prevDayIndex=i-1;weeklyWeatherData.push({date:weatherData.daily.time[i],weatherCode:weatherData.daily.weathercode[i],maxTemp:weatherData.daily.temperature_2m_max[i],minTemp:weatherData.daily.temperature_2m_min[i],precipProbability:weatherData.daily.precipitation_probability_max[i],maxTempDiff:Math.round(weatherData.daily.temperature_2m_max[i]-weatherData.daily.temperature_2m_max[prevDayIndex]),minTempDiff:Math.round(weatherData.daily.temperature_2m_min[i]-weatherData.daily.temperature_2m_min[prevDayIndex])})}const weeklyContainer=document.getElementById("js-weekly-weather-container");if(!weeklyContainer)return;const template=document.getElementById("js-weekly-weather-template");if(!template)return;weeklyContainer.innerHTML="";weeklyWeatherData.forEach(weatherData=>{const card=(0,_weatherUtils.createWeeklyWeatherCard)(weatherData,template);weeklyContainer.appendChild(card)})};const weeklyWeather=()=>{fetchWeeklyWeather()};exports.weeklyWeather=weeklyWeather},{"./hooks/weatherUtils":2}]},{},[3]);